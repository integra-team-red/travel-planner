plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version "7.2.1"
    id "org.openapi.generator" version "7.15.0"
}

group = 'cloudflight.integra'
version = '0.0.1-SNAPSHOT'
description = 'backend'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.13.0'
    testImplementation 'org.mockito:mockito-core:5.19.0'
    testImplementation 'com.h2database:h2'
}

openApiGenerate {
    generatorName = "typescript-fetch" //
    inputSpec = "${rootDir}/openapi.yaml"
    outputDir = "${rootDir}/../frontend/typescript-client"
    apiPackage = "api"
    modelPackage = "model"
}

tasks.register('generateOpenApiDocs', Test) {
    useJUnitPlatform()
    include '**/OpenApiExportTest.class'
}

tasks.named('openApiGenerate') {
    dependsOn 'generateOpenApiDocs'
}

assemble.dependsOn tasks.named('openApiGenerate')

tasks.named('test') {
    useJUnitPlatform()
}

spotless {
    java {
        palantirJavaFormat()
        target 'src/**/*.java'
    }
}
